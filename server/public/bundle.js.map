{"version":3,"names":[],"mappings":"","sources":["bundle.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst challenge_controller_1 = require(\"./controllers/challenge.controller\");\r\nconst challenge_service_1 = require(\"./services/challenge.service\");\r\nconst challenge_view_1 = require(\"./views/challenge.view\");\r\nconst login_view_1 = require(\"./views/login.view\");\r\nconst signup_view_1 = require(\"./views/signup.view\");\r\nconst user_service_1 = require(\"./services/user.service\");\r\nconst signup_controller_1 = require(\"./controllers/signup.controller\");\r\nconst home_view_1 = require(\"./views/home.view\");\r\nconst home_controller_1 = require(\"./controllers/home.controller\");\r\nconst game_view_1 = require(\"./views/game.view\");\r\nconst game_service_1 = require(\"./services/game.service\");\r\nconst game_controller_1 = require(\"./controllers/game.controller\");\r\n// REVIEW: Most specific type found so far since:\r\n// classes are functions, and functions are objects in js...\r\n// (Class instances are not defined as function subtypes though,\r\n//  and lack bind(), call(), etc...)\r\nlet app;\r\nconst urlParams = new URLSearchParams(window.location.search);\r\nconst page = urlParams.get('page');\r\nconst session_id = urlParams.get('session_id');\r\nswitch (page) {\r\n    case 'signup':\r\n        app = new signup_controller_1.SignupController(new user_service_1.UserService(), new signup_view_1.SignupView());\r\n        break;\r\n    case 'home':\r\n        app = new home_controller_1.HomeController(session_id, new home_view_1.HomeView());\r\n        break;\r\n    case 'challenge':\r\n        app = new challenge_controller_1.ChallengeController(session_id, new challenge_service_1.ChallengeService(), new challenge_view_1.ChallengeView());\r\n        break;\r\n    case 'game':\r\n        app = new game_controller_1.GameController(new game_service_1.GameService(), new game_view_1.GameView());\r\n        break;\r\n    case 'demo':\r\n        break;\r\n    case 'login':\r\n        app = new login_view_1.LoginView();\r\n        break;\r\n    default:\r\n        const { origin, pathname } = location;\r\n        // redirect bad/missing page params to login\r\n        location.replace(origin + pathname + '?page=login');\r\n        break;\r\n}\r\n\n},{\"./controllers/challenge.controller\":2,\"./controllers/game.controller\":3,\"./controllers/home.controller\":4,\"./controllers/signup.controller\":5,\"./services/challenge.service\":9,\"./services/game.service\":10,\"./services/user.service\":11,\"./views/challenge.view\":14,\"./views/game.view\":15,\"./views/home.view\":16,\"./views/login.view\":17,\"./views/signup.view\":18}],2:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @class Controller\r\n *\r\n * Links the user input and the view output.\r\n *\r\n * @param model\r\n * @param view\r\n */\r\nclass ChallengeController {\r\n    constructor(session_id, challengeService, challengeView) {\r\n        this.session_id = session_id;\r\n        this.challengeService = challengeService;\r\n        this.challengeView = challengeView;\r\n        this.onUserListChanged = (challenge) => {\r\n            this.challengeView.displayUsers(challenge);\r\n        };\r\n        this.handleStartChallenge = (challenge) => {\r\n            // TODO: call this.challengeService to \r\n            // initialize and record (in Mongo) the \r\n            // start of a challenge, e.g...\r\n            //this.challengeService.startChallenge(challenge)...\r\n            // And route to game play page...\r\n            const { origin, pathname } = location;\r\n            location.replace(origin + pathname + '?page=game&session_id=' + this.session_id);\r\n        };\r\n        this.handleAddUser = (challenge) => {\r\n            this.challengeService.add(challenge);\r\n        };\r\n        this.handleEditUser = (id, challenge) => {\r\n            this.challengeService.edit(id, challenge);\r\n        };\r\n        this.handleDeleteUser = (id) => {\r\n            this.challengeService.delete(id);\r\n        };\r\n        this.handleToggleUser = (id) => {\r\n            this.challengeService.toggle(id);\r\n        };\r\n        // Explicit this binding\r\n        this.challengeService.bindUserListChanged(this.onUserListChanged);\r\n        // First \"real\" Code blitz handler... :)\r\n        this.challengeView.bindStartChallenge(this.handleStartChallenge);\r\n        // Useful examples refactored from original MVC template...\r\n        // (Renamed from contact/user application to Code Blitz/challenge\r\n        //  but may be further modified (or removed)...)\r\n        this.challengeView.bindAddUser(this.handleAddUser);\r\n        this.challengeView.bindEditUser(this.handleEditUser);\r\n        this.challengeView.bindDeleteUser(this.handleDeleteUser);\r\n        this.challengeView.bindToggleUser(this.handleToggleUser);\r\n        // Display initial users\r\n        this.onUserListChanged(this.challengeService.users);\r\n    }\r\n}\r\nexports.ChallengeController = ChallengeController;\r\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst client_game_model_1 = require(\"../models/client.game.model\");\r\n/**\r\n * @class Controller\r\n *\r\n * Links the user input and the view output.\r\n *\r\n * @param model\r\n * @param view\r\n */\r\nclass GameController {\r\n    // Use the constructor shortcut 'private' feature instead...\r\n    //  private gameService : HandleMoveToken;\r\n    constructor(gameService, gameView) {\r\n        this.gameService = gameService;\r\n        this.gameView = gameView;\r\n        this.handleMoveToken = (tokenID, direction) => {\r\n            this.gameService.moveToken(tokenID, direction);\r\n        };\r\n        // TODO: Study: Are constructor parameters added to 'this' class instance?\r\n        client_game_model_1.locations.forEach((location) => {\r\n            this.gameService.bindTokenLocationChanged(location, (tokens) => {\r\n                this.gameView.display(location, tokens);\r\n            });\r\n        });\r\n        // NOTE: Cannot directly call this.gameService.moveToken()\r\n        // from here because context is NOT properly conveyed\r\n        // to service method.  We MUST call handleMoveToken below.\r\n        // (REVIEW: THIS PATTERN)\r\n        this.gameView.bindMoveToken(this.handleMoveToken);\r\n    }\r\n}\r\nexports.GameController = GameController;\r\n\n},{\"../models/client.game.model\":7}],4:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass HomeController {\r\n    constructor(session_id, homeView) {\r\n        this.session_id = session_id;\r\n        this.homeView = homeView;\r\n        this.handleStartPlay = (mode) => {\r\n            const { origin, pathname } = location;\r\n            if (mode === 'challenge')\r\n                location.replace(origin + pathname\r\n                    + '?page=challenge&session_id=' + this.session_id);\r\n            else\r\n                alert('Single player mode not yet implemented.');\r\n        };\r\n        this.homeView.bindStartPlay(this.handleStartPlay);\r\n    }\r\n}\r\nexports.HomeController = HomeController;\r\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass SignupController {\r\n    constructor(userService, signupView) {\r\n        this.userService = userService;\r\n        this.signupView = signupView;\r\n        this.handleAddUser = (userInfo) => {\r\n            this.userService.addUser(userInfo)\r\n                .then(res => {\r\n                const { origin, pathname } = location;\r\n                if (res._id)\r\n                    location.replace(origin + pathname + '?page=home&session_id=' + res._id);\r\n                else\r\n                    throw res;\r\n            })\r\n                .catch(reason => {\r\n                alert(`Failed to create new user; reason=${JSON.stringify(reason)}`);\r\n            });\r\n        };\r\n        this.signupView.bindAddUser(this.handleAddUser);\r\n    }\r\n}\r\nexports.SignupController = SignupController;\r\n\n},{}],6:[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * @class Model\r\n *\r\n * Manages the data of the application.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst util_1 = require(\"../utils/util\");\r\nclass Challenge {\r\n    constructor({ name, winLossRecord, online } = {\r\n        name: null,\r\n        winLossRecord: null,\r\n        online: false\r\n    }) {\r\n        this.id = util_1.uuidv4();\r\n        this.name = name;\r\n        this.winLossRecord = winLossRecord;\r\n        this.online = online;\r\n    }\r\n}\r\nexports.Challenge = Challenge;\r\n\n},{\"../utils/util\":13}],7:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.locations = ['conveyor', 'token bank', 'code'];\r\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass UserInfo {\r\n    constructor(name, email, password, language = 'Javascript', online = true, wins = 0, losses = 0, avgScore = 0) {\r\n        this.name = name;\r\n        this.email = email;\r\n        this.password = password;\r\n        this.language = language;\r\n        this.online = online;\r\n        this.wins = wins;\r\n        this.losses = losses;\r\n        this.avgScore = avgScore;\r\n    }\r\n}\r\nexports.UserInfo = UserInfo;\r\n\n},{}],9:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst challenge_model_1 = require(\"../models/challenge.model\");\r\n/**\r\n * @class Service\r\n *\r\n * Manages the data of the application.\r\n */\r\nclass ChallengeService {\r\n    constructor() {\r\n        const users = JSON.parse(localStorage.getItem('users')) || [];\r\n        this.users = users.map(user => new challenge_model_1.Challenge(user));\r\n    }\r\n    bindUserListChanged(callback) {\r\n        this.onUserListChanged = callback;\r\n    }\r\n    _commit(users) {\r\n        this.onUserListChanged(users);\r\n        localStorage.setItem('users', JSON.stringify(users));\r\n    }\r\n    add(user) {\r\n        this.users.push(new challenge_model_1.Challenge(user));\r\n        this._commit(this.users);\r\n    }\r\n    edit(id, userToEdit) {\r\n        let user = this.users\r\n            .find(({ id: user_id }) => user_id === id);\r\n        Object.assign(user, userToEdit);\r\n        this._commit(this.users);\r\n    }\r\n    delete(_id) {\r\n        this.users = this.users.filter(({ id }) => id !== _id);\r\n        this._commit(this.users);\r\n    }\r\n    toggle(_id) {\r\n        this.users = this.users.map(user => user.id === _id ? new challenge_model_1.Challenge(Object.assign(Object.assign({}, user), { online: !user.online })) : user);\r\n        this._commit(this.users);\r\n    }\r\n}\r\nexports.ChallengeService = ChallengeService;\r\n\n},{\"../models/challenge.model\":6}],10:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst client_game_model_1 = require(\"../models/client.game.model\");\r\nconst Fetch_1 = require(\"../utils/Fetch\");\r\n/**\r\n * @class Service\r\n *\r\n * Manages the data of the application.\r\n */\r\nclass GameService {\r\n    constructor() {\r\n        this.tokens = {};\r\n        this.tokenLocationArray = {};\r\n        this.onTokenLocationChanged = {};\r\n        // Initialize location arrays...\r\n        client_game_model_1.locations.forEach((location) => {\r\n            this.tokenLocationArray[location] = []; // initialize arrays\r\n        });\r\n        // Read exercise data from server and load it\r\n        Fetch_1.Fetch('/token')\r\n            .then(res => res && res.json())\r\n            .then(this.loadExercise.bind(this));\r\n    }\r\n    loadExercise(exerciseTokens) {\r\n        // Load all game tokens to\r\n        // the central game token storage object\r\n        // with a location setting of conveyor...\r\n        this.tokens = exerciseTokens.reduce((result, exerciseToken, index) => {\r\n            result[exerciseToken.id]\r\n                = Object.assign(Object.assign({}, exerciseToken), { location: 'conveyor' });\r\n            return result;\r\n        }, {});\r\n        this.refreshLocationArrays();\r\n        this.commit(client_game_model_1.locations);\r\n    }\r\n    bindTokenLocationChanged(tokenLocation, callback) {\r\n        this.onTokenLocationChanged[tokenLocation] = callback;\r\n        // Trigger view refresh on bind\r\n        this.commit([tokenLocation]);\r\n    }\r\n    refreshLocationArrays() {\r\n        let allIDsToProcess = new Set(Object.keys(this.tokens));\r\n        // Remove any location array entries that have moved\r\n        client_game_model_1.locations.forEach((location) => {\r\n            // Check existing entries for removal or confirmation\r\n            [...this.tokenLocationArray[location]].forEach((tokenID, index) => {\r\n                if (this.tokens[tokenID].location === location) {\r\n                    // Token is confirmed in proper location, so do nothing \r\n                    // except remove from to-process set\r\n                    if (!allIDsToProcess.delete(tokenID))\r\n                        // Hopefully the following will never occur,\r\n                        // even though our algorithm is 'self healing' in that\r\n                        // it guarantees we will be restored to a valid state.\r\n                        alert(`Assertion that tokens should be in only one location FAILED for id ${tokenID}!`);\r\n                }\r\n                else {\r\n                    // Token must have moved, so remove from this (obsolete) location\r\n                    console.log(`--- location: ${location}`);\r\n                    console.log(this.tokenLocationArray[location].join());\r\n                    this.tokenLocationArray[location].splice(index, 1);\r\n                    console.log(this.tokenLocationArray[location].join());\r\n                }\r\n            });\r\n        });\r\n        // Add any unconfirmed IDs to their proper location arrays (append to end)\r\n        allIDsToProcess.forEach((tokenID) => {\r\n            this.tokenLocationArray[this.tokens[tokenID].location].push(tokenID);\r\n            // allIDsToProcess.delete(tokenID); -- not needed since we process all, and we are done\r\n        });\r\n    }\r\n    moveToken(tokenID, direction) {\r\n        const oldLocation = this.tokens[tokenID].location;\r\n        let newPos = client_game_model_1.locations.indexOf(oldLocation) + direction;\r\n        // Check boundaries\r\n        if (newPos < 0 || newPos >= client_game_model_1.locations.length)\r\n            //      alert('Assertion FAILED that tokens not be moved beyond location positions'\r\n            //      +` 0, 1, and 2; tried to move token ID ${tokenID} to position #${newPos}`);\r\n            newPos = client_game_model_1.locations.indexOf(oldLocation) - direction; // help w/ testing...\r\n        //    else { ...\r\n        // Boundary checks out OK, proceed to move\r\n        const newLocation = client_game_model_1.locations[newPos];\r\n        // alert(`tokenID=${tokenID}, direction=${direction}, from=${oldLocation} to ${newLocation}`);\r\n        this.tokens[tokenID].location = newLocation;\r\n        this.refreshLocationArrays();\r\n        this.commit([oldLocation, newLocation]);\r\n        //    } ...\r\n        return;\r\n    }\r\n    commit(locations) {\r\n        locations.forEach((location) => {\r\n            this.onTokenLocationChanged[location](this.tokenLocationArray[location].map(tokenID => this.tokens[tokenID]));\r\n        });\r\n    }\r\n}\r\nexports.GameService = GameService;\r\n\n},{\"../models/client.game.model\":7,\"../utils/Fetch\":12}],11:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Fetch_1 = require(\"../utils/Fetch\");\r\nclass UserService {\r\n    addUser(userInfo) {\r\n        return Fetch_1.Fetch('/user', {\r\n            method: 'POST',\r\n            body: JSON.stringify(userInfo)\r\n        })\r\n            .then(res => res && res.json());\r\n    }\r\n}\r\nexports.UserService = UserService;\r\n\n},{\"../utils/Fetch\":12}],12:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Fetch = (resource, init = { method: 'GET' }, defaultMessage = true) => {\r\n    let _init = Object.assign({}, init);\r\n    _init.headers = _init.headers || {};\r\n    _init.headers['Content-Type'] = _init.headers['Content-Type'] || 'application/json; charset=utf-8';\r\n    return new Promise((resolve, reject) => {\r\n        const { origin, pathname } = location;\r\n        return fetch(resource, _init)\r\n            .then(res => {\r\n            if (res.status >= 400 /* Http error response range */) {\r\n                if (defaultMessage)\r\n                    alert(`Error fetching resource ${resource}: ${res.statusText}`);\r\n                reject(res.statusText);\r\n            }\r\n            else\r\n                resolve(res);\r\n        })\r\n            .catch((error) => {\r\n            if (error)\r\n                alert(error);\r\n            else if (defaultMessage)\r\n                console.warn(`Fetch exception with no error message`);\r\n            reject(error);\r\n        });\r\n    });\r\n};\r\n\n},{}],13:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.uuidv4 = () => {\r\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) => (c ^\r\n        (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))).toString(16));\r\n};\r\n\n},{}],14:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst challenge_model_1 = require(\"../models/challenge.model\");\r\nclass ChallengeView {\r\n    constructor() {\r\n        this.app = document.querySelector('#root');\r\n        this.form = this.createElement('form');\r\n        this.createInput({\r\n            key: 'inputName',\r\n            type: 'text',\r\n            placeholder: 'Name',\r\n            name: 'name'\r\n        });\r\n        this.createInput({\r\n            key: 'inputWinLossRecord',\r\n            type: 'text',\r\n            placeholder: 'Win / Loss',\r\n            name: 'winLossRecord'\r\n        });\r\n        this.submitButton = this.createElement('button');\r\n        this.submitButton.textContent = 'Submit';\r\n        this.gameOnButton = this.createElement('button');\r\n        this.gameOnButton.textContent = 'Game On!';\r\n        this.form.append(this.inputName, this.inputWinLossRecord, this.submitButton, this.gameOnButton);\r\n        /*\r\n            this.gameOnButton.addEventListener('click', event => {\r\n              const { origin, pathname } = location;\r\n                  location.replace(origin+pathname+'?page=game');\r\n            });\r\n        */\r\n        this.title = this.createElement('h1');\r\n        this.title.textContent = 'Challenge';\r\n        this.userList = this.createElement('ul', 'user-list');\r\n        this.app.append(this.title, this.form, this.userList);\r\n        this._temporaryWinLossText = '';\r\n        this._initLocalListeners();\r\n    }\r\n    get _nameText() {\r\n        return this.inputName.value;\r\n    }\r\n    get _winLossRecordText() {\r\n        return this.inputWinLossRecord.value;\r\n    }\r\n    _resetInput() {\r\n        this.inputName.value = '';\r\n        this.inputWinLossRecord.value = '';\r\n    }\r\n    createInput({ key, type, placeholder, name } = {\r\n        key: 'default',\r\n        type: 'text',\r\n        placeholder: 'default',\r\n        name: 'default'\r\n    }) {\r\n        this[key] =\r\n            Object.assign(this.createElement('input'), { type, placeholder, name });\r\n    }\r\n    createElement(tag, className) {\r\n        const element = document.createElement(tag);\r\n        if (className)\r\n            element.classList.add(className);\r\n        return element;\r\n    }\r\n    displayUsers(users) {\r\n        // Delete all nodes\r\n        while (this.userList.firstChild) {\r\n            this.userList.removeChild(this.userList.firstChild);\r\n        }\r\n        // Show default message\r\n        if (users.length === 0) {\r\n            const p = this.createElement('p');\r\n            p.textContent = 'Nothing to do! Add a user?';\r\n            this.userList.append(p);\r\n        }\r\n        else {\r\n            // Create nodes\r\n            users.forEach(user => {\r\n                const li = this.createElement('li');\r\n                li.id = user.id;\r\n                const checkbox = this.createElement('input');\r\n                checkbox.type = 'checkbox';\r\n                checkbox.checked = user.online;\r\n                const spanUser = this.createElement('span');\r\n                const spanAge = this.createElement('span');\r\n                spanAge.contentEditable = 'true';\r\n                spanAge.classList.add('editable');\r\n                if (user.online) {\r\n                    const strikeName = this.createElement('s');\r\n                    strikeName.textContent = user.name;\r\n                    spanUser.append(strikeName);\r\n                    const strikeAge = this.createElement('s');\r\n                    strikeAge.textContent = user.winLossRecord;\r\n                    spanAge.append(strikeAge);\r\n                }\r\n                else {\r\n                    spanUser.textContent = user.name;\r\n                    spanAge.textContent = user.winLossRecord;\r\n                }\r\n                const deleteButton = this.createElement('button', 'delete');\r\n                deleteButton.textContent = 'Delete';\r\n                li.append(checkbox, spanUser, spanAge, deleteButton);\r\n                // Append nodes\r\n                this.userList.append(li);\r\n            });\r\n        }\r\n    }\r\n    _initLocalListeners() {\r\n        this.userList.addEventListener('input', event => {\r\n            if (event.target.className === 'editable') {\r\n                this._temporaryWinLossText = event.target.innerText;\r\n            }\r\n        });\r\n    }\r\n    bindStartChallenge(handler) {\r\n        this.gameOnButton.addEventListener('click', event => {\r\n            //\r\n            // NOTE: Passing a Challenge object is probably \r\n            // not needed, but I'm just continuing with\r\n            // the MVC template pattern for now.\r\n            // (Feel free to remove/simplify/refactor...)\r\n            // We'll probably reflect challenge and game play\r\n            // \"state\" all in Mongo, and our services can \r\n            // always get that information via a Mongoose query.\r\n            //\r\n            handler(new challenge_model_1.Challenge({\r\n                name: this._nameText,\r\n                winLossRecord: this._winLossRecordText,\r\n                online: true /*online*/\r\n            }));\r\n        });\r\n    }\r\n    bindAddUser(handler) {\r\n        this.form.addEventListener('submit', event => {\r\n            event.preventDefault();\r\n            if (this._nameText) {\r\n                handler({\r\n                    name: this._nameText,\r\n                    winLossRecord: this._winLossRecordText\r\n                });\r\n                this._resetInput();\r\n            }\r\n        });\r\n    }\r\n    bindDeleteUser(handler) {\r\n        this.userList.addEventListener('click', event => {\r\n            if (event.target.className === 'delete') {\r\n                const id = event.target.parentElement.id;\r\n                handler(id);\r\n            }\r\n        });\r\n    }\r\n    bindEditUser(handler) {\r\n        this.userList.addEventListener('focusout', event => {\r\n            if (this._temporaryWinLossText) {\r\n                const id = event.target.parentElement.id;\r\n                const key = 'winLossRecord';\r\n                handler(id, { [key]: this._temporaryWinLossText });\r\n                this._temporaryWinLossText = '';\r\n            }\r\n        });\r\n    }\r\n    bindToggleUser(handler) {\r\n        this.userList.addEventListener('change', event => {\r\n            if (event.target.type === 'checkbox') {\r\n                const id = event.target.parentElement.id;\r\n                handler(id);\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.ChallengeView = ChallengeView;\r\n\n},{\"../models/challenge.model\":6}],15:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst client_game_model_1 = require(\"../models/client.game.model\");\r\nclass GameView {\r\n    constructor() {\r\n        this.ulTokens = {};\r\n        this.app = document.getElementById('root');\r\n        const html = `\r\n            <div class='game-page'>\r\n                <div class='flex5'>\r\n                    <div id='prompt'>PROMPT: Write a program to print out 10 numbers</div>\r\n                    <div id='language'>Javascript</div>                    \r\n                    <div id='timer'>TIMER &nbsp;<b>3:07</b></div>\r\n                </div>\r\n                <div class='conveyor-container'>\r\n                    <ul id='conveyor' />\r\n                </div>\r\n                <div class='flex2'>\r\n                    <div class='flex3'>\r\n                        <div class='code-editor'>\r\n                            <ul id='code' />\r\n                        </div>\r\n                        <div id='label'>Token Bank</div>\r\n                        <div class='token-container'>\r\n                            <ul id='token_bank' />\r\n                        </div> \r\n                    </div>\r\n                    <div class='flex4'>\r\n                        <div class=\"stats-container\">\r\n                            <div class='flex9'>\r\n                            <div id='stats'><b>MY STATS</b><br><BR>CREDIT: $5.12<br>TOKENS PLACED: 9<BR>LINES OF CODE: 2<BR>AVG COST PER LINE: $0.85<br>SUBMIT ATTEMPTS: 0</div>\r\n                            </div>\r\n                            <div class='flex9'>\r\n                            <div id='stats'><b>OPPONENT STATS</b><br><BR>CREDIT: $4.78<br>TOKENS PLACED: 12<BR>LINES OF CODE: 3<BR>AVG COST PER LINE: $0.72<br>SUBMIT ATTEMPTS: 1</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class='opponentCode'>\r\n                        </div>\r\n\r\n                        <button id=\"myBtn\"><div class='submitButton'><div class='submit'>SUBMIT CODE</div>\r\n                        </div></button>\r\n                        <div id=\"myModal\" class=\"modal\">\r\n                            <div class=\"modal-content\">\r\n                                <span class=\"close\">&times;</span>\r\n                                <p>YOU WIN!</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class='flex6'>\r\n                            <div class='flex7'>\r\n                                <div id='label'>Return Token</div>\r\n                                <div class='sellBack'>\r\n                                </div>\r\n                            </div>\r\n                            <div class='flex8'>\r\n                                <div id='label2'>Budget</div>                            \r\n                                <div class='credit'><br><br>CREDIT<br>$ 5.12\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        `;\r\n        this.app.innerHTML = html;\r\n        //POP UP CODE START:\r\n        var modal = document.getElementById(\"myModal\");\r\n        // Get the button that opens the modal\r\n        var btn = document.getElementById(\"myBtn\");\r\n        // Get the <span> element that closes the modal\r\n        var span = document.getElementsByClassName(\"close\");\r\n        // When the user clicks the button, open the modal \r\n        btn.onclick = function () {\r\n            modal.style.display = \"block\";\r\n        };\r\n        // When the user clicks on <span> (x), close the modal\r\n        span.onclick = function () {\r\n            modal.style.display = \"none\";\r\n        };\r\n        // When the user clicks anywhere outside of the modal, close it\r\n        window.onclick = function (event) {\r\n            if (event.target == modal) {\r\n                modal.style.display = \"none\";\r\n            }\r\n        };\r\n        //END POP UP CODE.\r\n        client_game_model_1.locations.forEach((location) => {\r\n            this.ulTokens[location]\r\n                = document.getElementById(location.replace(' ', '_') // spaces not valid in HTML IDs\r\n                );\r\n        });\r\n    }\r\n    bindMoveToken(handler) {\r\n        client_game_model_1.locations.forEach((location) => {\r\n            this.ulTokens[location].addEventListener('click', event => {\r\n                handler(event.target.id, 1);\r\n            });\r\n        });\r\n    }\r\n    display(location, tokens) {\r\n        // clear any prior tokens\r\n        this.ulTokens[location].innerText = '';\r\n        let indentationLevel = 0;\r\n        tokens.forEach((token) => {\r\n            const li = document.createElement('li');\r\n            li.id = token.id;\r\n            li.innerHTML = token.token;\r\n            li.classList.add(token.type);\r\n            switch (token.token) {\r\n                case '{':\r\n                    indentationLevel++;\r\n                    li.classList.add('open-curly-bracket');\r\n                    break;\r\n                case '}':\r\n                    indentationLevel--;\r\n                    li.classList.add('close-curly-bracket');\r\n                    break;\r\n            }\r\n            li.classList.add('indent-' + indentationLevel.toString());\r\n            this.ulTokens[location].appendChild(li);\r\n        });\r\n    }\r\n}\r\nexports.GameView = GameView;\r\n\n},{\"../models/client.game.model\":7}],16:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass HomeView {\r\n    constructor() {\r\n        this.app = document.getElementById('root');\r\n        const html = `\r\n        <div class='formCenter'>\r\n            <form id='homePage'>\r\n                <div class = 'box'>\r\n                    <img src=\"http://icon-library.com/images/blitz-icon/blitz-icon-18.jpg\" alt=\"Blitz Icon\" width=\"128\" height=\"128\">\r\n                    <h1>Code Blitz</h1>\r\n                    <div>\r\n                        <button id='challenge' type='submit'>Challenge</button>\r\n                        <button id='singlePlay' type='submit'>Single Play</button>\r\n                    </div> \r\n                </div>\r\n            </form>\r\n        </div>\r\n        `;\r\n        this.app.innerHTML = html;\r\n    }\r\n    bindStartPlay(handler) {\r\n        [...document.getElementsByTagName(\"button\")]\r\n            .forEach((element) => {\r\n            element.addEventListener('click', event => {\r\n                event.preventDefault();\r\n                const buttonID = event.target.id;\r\n                handler(buttonID);\r\n            });\r\n        });\r\n    }\r\n}\r\nexports.HomeView = HomeView;\r\n\n},{}],17:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass LoginView {\r\n    constructor() {\r\n        this.app = document.getElementById('root');\r\n        const html = `\r\n        <div class='formCenter'>\r\n            <form id='loginForm' method='post'>\r\n                <div class = 'box'>\r\n                    <img src=\"http://icon-library.com/images/blitz-icon/blitz-icon-18.jpg\" alt=\"Blitz Icon\" width=\"128\" height=\"128\">\r\n                    <h1>Code Blitz</h1>\r\n                    <div>\r\n                        <img src=\"http://icons.iconarchive.com/icons/custom-icon-design/mono-general-2/512/mail-icon.png\" alt=\"Mail Icon\" width=\"20\" height=\"20\">\r\n                        <input name='email' type='text' placeholder='Email' />\r\n                    </div>\r\n                    <div>\r\n                        <img src=\"https://cdn2.iconfinder.com/data/icons/flat-ui-icons-24-px/24/lock-24-512.png\" alt=\"Lock Icon\" width=\"20\" height=\"20\">\r\n                        <input name='password' type='password' placeholder='Password' />\r\n                    </div>\r\n                    <div>\r\n                        <button type='submit'>Sign In</button>\r\n                    </div>\r\n                    <div>\r\n                        <p> Don't have an account? \r\n                        <a href=\"?page=signup\" target =\"_top\" >Create an account</a>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        `;\r\n        this.app.innerHTML = html;\r\n        document.getElementById('loginForm')\r\n            .addEventListener('submit', event => {\r\n            //event.preventDefault(); -- actually post is handy, no need for ajax call\r\n            const { origin, pathname } = location;\r\n            setTimeout(() => {\r\n                // timeout is temporary hack pending server auth implementation\r\n                location.replace(origin + pathname + '?page=signup');\r\n            });\r\n        });\r\n        //    this._t emporaryAgeText = '';\r\n        //    this._initLocalListeners();\r\n    }\r\n}\r\nexports.LoginView = LoginView;\r\n\n},{}],18:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst user_model_1 = require(\"../models/user.model\");\r\nclass SignupView {\r\n    constructor() {\r\n        this.app = document.getElementById('root');\r\n        const html = `\r\n            <div class='formCenter'>\r\n                <form id='Signup'>\r\n                    <div class = 'box'>\r\n                        <img src=\"http://icon-library.com/images/blitz-icon/blitz-icon-18.jpg\" alt=\"Blitz Icon\" width=\"128\" height=\"128\">\r\n                        <h1>Code Blitz Signup</h1>\r\n                        <div>\r\n                            <img src=\"https://cdn2.iconfinder.com/data/icons/font-awesome/1792/user-512.png\" alt=\"user Icon\" width=\"20\" height=\"20\">\r\n                            <input name='name' type='text' placeholder='Name' />            \r\n                        </div>\r\n                        <div>\r\n                            <img src=\"http://icons.iconarchive.com/icons/custom-icon-design/mono-general-2/512/mail-icon.png\" alt=\"Mail Icon\" width=\"20\" height=\"20\">\r\n                            <input name='email' type='text' placeholder='Email' />\r\n                        </div>\r\n                        <div>\r\n                            <img src=\"https://cdn2.iconfinder.com/data/icons/flat-ui-icons-24-px/24/lock-24-512.png\" alt=\"Lock Icon\" width=\"20\" height=\"20\">\r\n                            <input name='password' type='password' placeholder='Password' />\r\n                        </div>\r\n                        <div>\r\n                            <button type='submit'>Let's Code!</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        `;\r\n        this.app.innerHTML = html;\r\n    }\r\n    bindAddUser(handler) {\r\n        document.getElementById('Signup')\r\n            .addEventListener('submit', event => {\r\n            event.preventDefault();\r\n            const fields = document.forms['Signup'].elements;\r\n            handler(new user_model_1.UserInfo(fields[0].value, // name\r\n            fields[1].value, // email\r\n            fields[2].value // password\r\n            ));\r\n        });\r\n    }\r\n}\r\nexports.SignupView = SignupView;\r\n\n},{\"../models/user.model\":8}]},{},[1]);\n"],"file":"bundle.js"}